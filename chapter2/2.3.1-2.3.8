### 2.3.1 
画图

### 2.3.2
p < r 估计也不行

### 2.3.3
循环不变式的证明

### 2.3.4

迭代验证

### 2.3.5
void insert_port(vector<int> array, int start, int end){
if(end == start)
return;
insert_port(array, start, end-1);
insert_sort(array,start, end -1, array[end]);
}

#2.2.6 
```c++

int iterative_binary_search(vector<int> arr, int low, int high, int num){
	while(low <= high){
		int mid = (low + high) / 2;
		if( num == arr[mid])
			return mid;
		else if(num > arr[mid])
			low = mid + 1;
		else
			high = mid -1;
		}
	return -1;
}
int recursive_binary_search(vector<int> arr, int low, int high, int num){
	if(low < high)
		return -1;
	int mid = (low + high) / 2;
	if(arr[mid] == num)
		return mid;
	else if(num > arr[mid])
		return recursive_binary_search(arr,mid + 1, high, num);
		else return recursive_binary_search(arr, low, mid - 1, num);
```
### 2.3.7
提高的$\Theta(nlgn)$

### 2.3.8
从前到后查找
查到一个元素 然后查找另一个n-x元素
```c++
vector<int> res;
int sum;//那个数字
for(int i = 0; i < arr.size(); i++){
    if(arr.search(sum - arr[i]) != -1)
        res.emplace_back(i);
}
```
